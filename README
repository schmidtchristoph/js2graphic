[![Build Status](https://travis-ci.org/schmidtchristoph/bibDelete.svg?branch=master)](https://travis-ci.org/schmidtchristoph/bibDelete) [![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/github/schmidtchristoph/bibDelete?branch=master&svg=true)](https://ci.appveyor.com/project/schmidtchristoph/bibDelete) [![codecov](https://codecov.io/gh/schmidtchristoph/bibDelete/branch/master/graph/badge.svg)](https://codecov.io/gh/schmidtchristoph/bibDelete)

# js2graphic:
## Automatically saving JavaScript generated plots as graphics file
##### version 0.0.1

JavaScript (JS) data visualization libraries are made accessible in R by packages that are often based on the [htmlwidgets](http://www.htmlwidgets.org) package. These plotting packages produce figures generated by underlying executed JavaScript code. Thus, these figures are rendered and can be viewed in web browsers or the RStudio Viewer pane. The *js2graphic* package allows to easily and automatically save such figures as image files, like .jpg or .png, so that they can be reused, e.g. in publications or in presentations. However, there are a few exceptions, so that not all graphics can be saved automatically.


- - -
Save the JavaScript generated graphic as a cropped pdf without manually open it in a web browser first.

![web browser rendering the JS graphic](browser_rendering.png)
![JS graphic saved as cropped pdf](pdf_viewer.png)

- - -
##### Functions

- *jsGraphic2Pdf( )*  -- Saving JS graphic as PDF
- *jsGraphic2Png( )*  -- Saving JS graphic as PNG
- *pdfcrop( )*        -- Cropping margins from the PDF figure
- *imagecrop( )*      -- Cropping margins from the PNG figure
- *pdfPageExtract( )* -- 
- *svgFromHtml( )*

- - -
##### Usage


##### Case 1: Extracting an image from an already rendered JavaScript visualization that is stored as a web page in a html file

```
path1 <- system.file("extdata/alplots2_ff.html", package = "js2graphic")
file.copy(path1, getwd())

jsGraphic2Pdf("alplots2_ff.html", c(950, 500, 40, 20))
pdfcrop("JSgraphic.pdf") # generates the final cropped pdf containing the JS generated plot

jsGraphic2Png(file, c(950, 500, 40, 20))
imagecrop("JSgraphic.png") # generates the final cropped png containing the JS generated plot

file.remove(c("alplots2_ff.html", "JSgraphic.pdf", "JSgraphic_cr.pdf", "JSgraphic.png", "JSgraphic_cr.png"))
```



##### Case 2: 




##### Case 3: Using a generated graphic/plot object directly

E.g. the social network at https://christophergandrud.github.io/networkD3/

```
library(networkD3)
data(MisLinks)
data(MisNodes)
p <- forceNetwork(Links = MisLinks, Nodes = MisNodes,
             Source = "source", Target = "target",
             Value = "value", NodeID = "name",
             Group = "group", opacity = 0.9,
             height = 900, width = 900)

# longer rendering time so that the plot fully unfolds
jsGraphic2Pdf(p, c(900, 900, 20, 20), slow = TRUE)
pdfcrop("JSgraphic.pdf")

jsGraphic2Png(p, c(900, 900, 20, 20), slow = TRUE)
imagecrop("JSgraphic.png")

file.remove(c("JSgraphic.pdf", "JSgraphic_cr.pdf",
            "JSgraphic.png", "JSgraphic_cr.png"))
```




- - -

##### How to install this package from GitHub

There are several ways of installing the package, e.g.:

- install the "devtools" package first, then use
```devtools::install_github("schmidtchristoph/js2graphic")```

- install the "devtools" package first, clone the repository, then use
```devtools::install("path/to/repository/js2graphic")```

- - - 
##### System dependencies

The *js2graphic* functionality is based upon on [PhantomJS](http://phantomjs.org), [ImageMagick](http://www.imagemagick.org/), [Ghostscript](https://www.ghostscript.com) and [pdfcrop](https://www.ctan.org/pkg/pdfcrop?lang=en) (which is often shipped with LaTeX). These software tools have to be installed on your computer and have to be accessible on the command line.

Internally, this package uses JavaScript code available [here](https://github.com/ariya/phantomjs/blob/master/examples/rasterize.js).
- - -

This package passes ```devtools::check()``` with zero problems, notes or warnings on my machine running R 3.4.3 on macOS 10.13.5.

- - - 
The [MIT License (MIT)](http://opensource.org/licenses/MIT)
Copyright (c) 2018 Christoph Schmidt