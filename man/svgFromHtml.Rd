% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svgFromHtml.R
\name{svgFromHtml}
\alias{svgFromHtml}
\title{Extract svg graphic data from an html/webarchive file}
\usage{
svgFromHtml(file)
}
\arguments{
\item{file}{character file name, including the file typ specifier (e.g.
"myplot.html"). The corresponding .html/.webarchive file must contain the
svg graphic.}
}
\value{
Returns a boolean indicating the success of the attempt to store a
  .svg file. Also, writes the .svg file, if possible.
}
\description{
Extract the svg graphic data contained in an .html file or .webarchive file
and store it as an .svg file. Some plotting functions, which are based on
htmlwidgets like \code{networkD3} plots (e.g. the \code{alplots2} function of
this package) generate a html file that contains JavaScript code for the
generation of the graphic (i.e. there is no graphic stored in this html file,
but the code to generate the graphic). If this file is opened in a web
browser, the graphic is rendered and displayed. In some cases, the plot can
even be manipulated by the user, before storing it as html or webarchive file
that contains all elements (i.e. the plot as svg graphic) of the displayed
'website'. The resulting .svg file extracted with this function can be edited
with vector graphic tools like Affinity Designer or Inkscape. Using
\pkg{rsvg}\code{rsvg_pdf} the .svg file can be directly converted to pdf, or
converted to a .png file using \pkg{rsvg}\code{rsvg_png}.
}
\note{
The plot generated by e.g. \code{alplots2} has to be opened in a
  JavaScript capable web browser, which runs the JS code and generates the
  plots. From there the displayed plot can be manually stored as a webarchive
  or an html file that contains all content, i.e. all elements and graphics.
  This file is the input for this function.

  Within the web browser the plot can be rearranged prior to saving the
  .html/.webarchive file - the rearrangements are stored.
}
\examples{

# file generated by macOS/ OSX Safari (format = webarchive)
path1 <- system.file("extdata/alplots2.webarchive", package = "nwtbplots")
path2 <- paste(getwd(), "/alplots2.webarchive", sep="")
file.copy(path1, path2)
file  <- "alplots2.webarchive"
b     <- svgFromHtml(file)
print(b)
rsvg::rsvg_png("alplots2.svg", "alplots2.png")
rsvg::rsvg_pdf("alplots2.svg", "alplots2.pdf")

file.remove(c(file, "alplots2.svg", "alplots2.png", "alplots2.pdf"))



# file generated by macOS/ OSX Safari without storing web content
path1 <- system.file("extdata/alplots2_noSvg.html", package = "nwtbplots")
path2 <- paste(getwd(), "/alplots2_noSvg.html", sep="")
file.copy(path1, path2)
file  <- "alplots2_noSvg.html"
b     <- svgFromHtml(file)  # no svg content
print(b)
file.remove(file)



# file generated by macOS/ OSX Firefox (format = website, complete)
path1 <- system.file("extdata/alplots2_ff.html", package = "nwtbplots")
path2 <- paste(getwd(), "/alplots2_ff.html", sep="")
file.copy(path1, path2)
file  <- "alplots2_ff.html"
b     <- svgFromHtml(file)
print(b)
rsvg::rsvg_png("alplots2_ff.svg", "alplots2_ff.png")

file.remove(c(file, "alplots2_ff.svg", "alplots2_ff.png"))

}
\seealso{
\code{\link{alplots2}}

  \code{\link[rsvg]{rsvg_pdf}}
}
\author{
Christoph Schmidt <schmidtchristoph@users.noreply.github.com>
}
